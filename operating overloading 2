using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace operatingoverloading2
{
    class Matrix
    {
        public int a;
        public int b;
        public int c;
        public int d;
        public int e;
        public int f;
        public int g;
        public int h;
        public int i;
        public Matrix(int a,int b,int c,int d,int e,int f,int g,int h,int i)
        {
            this.a = a; 
            this.b = b;
            this.c = c; 
            this.d = d;
            this.e = e;
            this.f = f;
            this.g = g;
            this.h = h;
            this.i = i;
        }
        public override string ToString()
        {
            return a + " " + b + " " + c + "\n" + d + " " + e + " " + f + "\n" + g + " " + h + " " + i + "\n";
        }
        public static Matrix operator +(Matrix obj1,Matrix obj2)
        {
            Matrix obj = new Matrix(obj1.a + obj2.a , obj1.b + obj2.b , obj1.c + obj2.c , obj1.d + obj2.d , obj1.e + obj2.e , obj1.f + obj2.f , obj1.g + obj2.g , obj1.h + obj2.h, obj1.i + obj2.i);
            return obj;
        }

    }
    internal class Program
    {
        static void Main(string[] args)
        {
            Matrix m1 = new Matrix(1, 1, 1, 1, 1, 1, 1, 1, 1);
            Matrix m2 = new Matrix(1, 1, 1, 1, 1, 1, 1, 1, 1);
            Matrix m3 = new Matrix(1, 1, 1, 1, 1, 1, 1, 1, 1);
            Matrix m4 = m1+m2;
            Matrix m5 = m3+m4;
            Console.WriteLine(m4);
            Console.WriteLine(m5);


        }
    }
}
